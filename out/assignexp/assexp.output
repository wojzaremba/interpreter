value :
ValueInt 0

env :
Env (fromList [("b",[]),("x",[]),("y",[])]) (fromList [("main",FuncDecl Int (Ident "main") [] (IBlock [IDecl Int [IdentEmpty (Ident "x"),IdentEmpty (Ident "y")],IExp (EVarSet (Ident "x") (EVarSet (Ident "y") (EInt 3))),IExp (ECall (Ident "printInt") [EVar (Ident "x")]),IExp (ECall (Ident "printInt") [EVar (Ident "y")]),IExp (EVarSet (Ident "x") (EAdd (EVarSet (Ident "x") (EAdd (EVar (Ident "x")) (EInt 1))) (EVar (Ident "x")))),IExp (ECall (Ident "printInt") [EVar (Ident "x")]),IDecl Boolean [IdentExp (Ident "b") ETrue],IWhile (EEq (EVarSet (Ident "b") EFalse) ETrue) (IBlock [IExp (ECall (Ident "printString") [EStr "nope"])]),IIf (EVarSet (Ident "b") (ENot (EVar (Ident "b")))) (IBlock [IExp (ECall (Ident "printString") [EStr "yay!"])]),IRet (EInt 0)]))]) 3 (fromList [(1,ValueInt 8),(2,ValueInt 3),(3,ValueBool True)]) ["yay!\n","8\n","3\n","3\n"]

output:
3
3
8
yay!
